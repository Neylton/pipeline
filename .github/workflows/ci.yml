name: Java CI com Maven e SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "main" ]
  workflow_dispatch:
    

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build e testes com Maven
        run: mvn clean verify

      - name: Análise com SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=Neylton_pipeline \
            -Dsonar.organization=neylton \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Build da imagem Docker
        run: docker build -t demo-pipeline .

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag da imagem
        run: docker tag demo-pipeline ${{ secrets.DOCKER_USERNAME }}/demo-pipeline:latest

      - name: Push da imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/demo-pipeline:latest
